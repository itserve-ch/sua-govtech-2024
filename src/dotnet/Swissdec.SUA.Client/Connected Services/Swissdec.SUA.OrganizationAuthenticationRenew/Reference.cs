//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Swissdec.SUA.OrganizationAuthenticationRenew
{
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
    public partial class OrganizationAuthenticationFaultType
    {
        
        private FaultContextType faultContextField;
        
        private FaultStateType faultStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FaultContextType FaultContext
        {
            get
            {
                return this.faultContextField;
            }
            set
            {
                this.faultContextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FaultStateType FaultState
        {
            get
            {
                return this.faultStateField;
            }
            set
            {
                this.faultStateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
    public partial class FaultContextType
    {
        
        private UserAgentType userAgentField;
        
        private string organizationNameField;
        
        private System.DateTime transmissionDateField;
        
        private string responseIDField;
        
        private string requestIDField;
        
        private EmptyType testCaseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UserAgentType UserAgent
        {
            get
            {
                return this.userAgentField;
            }
            set
            {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string OrganizationName
        {
            get
            {
                return this.organizationNameField;
            }
            set
            {
                this.organizationNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TransmissionDate
        {
            get
            {
                return this.transmissionDateField;
            }
            set
            {
                this.transmissionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ResponseID
        {
            get
            {
                return this.responseIDField;
            }
            set
            {
                this.responseIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public EmptyType TestCase
        {
            get
            {
                return this.testCaseField;
            }
            set
            {
                this.testCaseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public partial class UserAgentType
    {
        
        private string producerField;
        
        private string nameField;
        
        private string versionField;
        
        private decimal standardVersionField;
        
        private string certificateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Producer
        {
            get
            {
                return this.producerField;
            }
            set
            {
                this.producerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name
        {
            get
            {
                return this.nameField;
            }
            set
            {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Version
        {
            get
            {
                return this.versionField;
            }
            set
            {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public decimal StandardVersion
        {
            get
            {
                return this.standardVersionField;
            }
            set
            {
                this.standardVersionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Certificate
        {
            get
            {
                return this.certificateField;
            }
            set
            {
                this.certificateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public partial class NotificationType
    {
        
        private QualityLevelType qualityLevelField;
        
        private string descriptionCodeField;
        
        private string descriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public QualityLevelType QualityLevel
        {
            get
            {
                return this.qualityLevelField;
            }
            set
            {
                this.qualityLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger", Order=1)]
        public string DescriptionCode
        {
            get
            {
                return this.descriptionCodeField;
            }
            set
            {
                this.descriptionCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description
        {
            get
            {
                return this.descriptionField;
            }
            set
            {
                this.descriptionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public enum QualityLevelType
    {
        
        /// <remarks/>
        Validity,
        
        /// <remarks/>
        Plausibility,
        
        /// <remarks/>
        Acceptance,
        
        /// <remarks/>
        Comment,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public partial class FaultStateType
    {
        
        private FaultCodeType codeField;
        
        private NotificationType[] errorField;
        
        private NotificationType[] warningField;
        
        private NotificationType[] infoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FaultCodeType Code
        {
            get
            {
                return this.codeField;
            }
            set
            {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Notification", IsNullable=false)]
        public NotificationType[] Error
        {
            get
            {
                return this.errorField;
            }
            set
            {
                this.errorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Notification", IsNullable=false)]
        public NotificationType[] Warning
        {
            get
            {
                return this.warningField;
            }
            set
            {
                this.warningField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Notification", IsNullable=false)]
        public NotificationType[] Info
        {
            get
            {
                return this.infoField;
            }
            set
            {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public enum FaultCodeType
    {
        
        /// <remarks/>
        NOT_accepted,
        
        /// <remarks/>
        NOT_plausible,
        
        /// <remarks/>
        NOT_valid,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthentication")]
    public partial class CertificateSignResponseType
    {
        
        private string subjectDNField;
        
        private string issuerDNField;
        
        private System.DateTime notBeforeField;
        
        private System.DateTime notAfterField;
        
        private byte[] pEMField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubjectDN
        {
            get
            {
                return this.subjectDNField;
            }
            set
            {
                this.subjectDNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IssuerDN
        {
            get
            {
                return this.issuerDNField;
            }
            set
            {
                this.issuerDNField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime NotBefore
        {
            get
            {
                return this.notBeforeField;
            }
            set
            {
                this.notBeforeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public System.DateTime NotAfter
        {
            get
            {
                return this.notAfterField;
            }
            set
            {
                this.notAfterField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=4)]
        public byte[] PEM
        {
            get
            {
                return this.pEMField;
            }
            set
            {
                this.pEMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
    public partial class ResponseContextType
    {
        
        private UserAgentType userAgentField;
        
        private string institutionNameField;
        
        private System.DateTime transmissionDateField;
        
        private string responseIDField;
        
        private string requestIDField;
        
        private EmptyType testCaseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UserAgentType UserAgent
        {
            get
            {
                return this.userAgentField;
            }
            set
            {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string InstitutionName
        {
            get
            {
                return this.institutionNameField;
            }
            set
            {
                this.institutionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TransmissionDate
        {
            get
            {
                return this.transmissionDateField;
            }
            set
            {
                this.transmissionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string ResponseID
        {
            get
            {
                return this.responseIDField;
            }
            set
            {
                this.responseIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public EmptyType TestCase
        {
            get
            {
                return this.testCaseField;
            }
            set
            {
                this.testCaseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public partial class EmptyType
    {
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CertificateSignRequestType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthentication")]
    public partial class CertificateSignRequestBaseType
    {
        
        private byte[] pEMField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] PEM
        {
            get
            {
                return this.pEMField;
            }
            set
            {
                this.pEMField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthentication")]
    public partial class CertificateSignRequestType : CertificateSignRequestBaseType
    {
        
        private string oneTimePasswordField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string OneTimePassword
        {
            get
            {
                return this.oneTimePasswordField;
            }
            set
            {
                this.oneTimePasswordField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public partial class CompanyNameType
    {
        
        private string hRRCNameField;
        
        private string[] complementaryLineField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("HR-RC-Name", Order=0)]
        public string HRRCName
        {
            get
            {
                return this.hRRCNameField;
            }
            set
            {
                this.hRRCNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ComplementaryLine", Order=1)]
        public string[] ComplementaryLine
        {
            get
            {
                return this.complementaryLineField;
            }
            set
            {
                this.complementaryLineField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
    public partial class RequestContextType
    {
        
        private UserAgentType userAgentField;
        
        private CompanyNameType companyNameField;
        
        private System.DateTime transmissionDateField;
        
        private string requestIDField;
        
        private LanguageCodeType languageCodeField;
        
        private EmptyType testCaseField;
        
        private string monitoringIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public UserAgentType UserAgent
        {
            get
            {
                return this.userAgentField;
            }
            set
            {
                this.userAgentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public CompanyNameType CompanyName
        {
            get
            {
                return this.companyNameField;
            }
            set
            {
                this.companyNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TransmissionDate
        {
            get
            {
                return this.transmissionDateField;
            }
            set
            {
                this.transmissionDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string RequestID
        {
            get
            {
                return this.requestIDField;
            }
            set
            {
                this.requestIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public LanguageCodeType LanguageCode
        {
            get
            {
                return this.languageCodeField;
            }
            set
            {
                this.languageCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public EmptyType TestCase
        {
            get
            {
                return this.testCaseField;
            }
            set
            {
                this.testCaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string MonitoringID
        {
            get
            {
                return this.monitoringIDField;
            }
            set
            {
                this.monitoringIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
    public enum LanguageCodeType
    {
        
        /// <remarks/>
        de,
        
        /// <remarks/>
        fr,
        
        /// <remarks/>
        it,
        
        /// <remarks/>
        en,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationRenewService", ConfigurationName="Swissdec.SUA.OrganizationAuthenticationRenew.OrganizationAuthenticationRenewPort")]
    public interface OrganizationAuthenticationRenewPort
    {
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Swissdec.SUA.OrganizationAuthenticationRenew.CheckInteroperabilityResponse> CheckInteroperabilityAsync(Swissdec.SUA.OrganizationAuthenticationRenew.CheckInteroperabilityRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(Swissdec.SUA.OrganizationAuthenticationRenew.OrganizationAuthenticationFaultType), Action="", Name="OrganizationAuthenticationFault", Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationServiceTypes")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        System.Threading.Tasks.Task<Swissdec.SUA.OrganizationAuthenticationRenew.RenewCertificateResponse> RenewCertificateAsync(Swissdec.SUA.OrganizationAuthenticationRenew.RenewCertificateRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckInteroperability", WrapperNamespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationServiceTypes", IsWrapped=true)]
    public partial class CheckInteroperabilityRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public Swissdec.SUA.OrganizationAuthenticationRenew.UserAgentType UserAgent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public string UmlautString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public decimal FirstOperand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public decimal SecondOperand;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public System.DateTime SystemDateTime;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public string MonitoringID;
        
        public CheckInteroperabilityRequest()
        {
        }
        
        public CheckInteroperabilityRequest(Swissdec.SUA.OrganizationAuthenticationRenew.UserAgentType UserAgent, string UmlautString, decimal FirstOperand, decimal SecondOperand, System.DateTime SystemDateTime, string MonitoringID)
        {
            this.UserAgent = UserAgent;
            this.UmlautString = UmlautString;
            this.FirstOperand = FirstOperand;
            this.SecondOperand = SecondOperand;
            this.SystemDateTime = SystemDateTime;
            this.MonitoringID = MonitoringID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CheckInteroperabilityResponse", WrapperNamespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationServiceTypes", IsWrapped=true)]
    public partial class CheckInteroperabilityResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public Swissdec.SUA.OrganizationAuthenticationRenew.UserAgentType UserAgent;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public bool UmlautStringIsCorrect;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public bool FirstOperandIsCorrect;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=3)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public string UmlautString;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=4)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public decimal AdditionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=5)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public decimal SubtractionResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common", Order=6)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/common/20200220/Common")]
        public System.DateTime SystemDateTime;
        
        public CheckInteroperabilityResponse()
        {
        }
        
        public CheckInteroperabilityResponse(Swissdec.SUA.OrganizationAuthenticationRenew.UserAgentType UserAgent, bool UmlautStringIsCorrect, bool FirstOperandIsCorrect, string UmlautString, decimal AdditionResult, decimal SubtractionResult, System.DateTime SystemDateTime)
        {
            this.UserAgent = UserAgent;
            this.UmlautStringIsCorrect = UmlautStringIsCorrect;
            this.FirstOperandIsCorrect = FirstOperandIsCorrect;
            this.UmlautString = UmlautString;
            this.AdditionResult = AdditionResult;
            this.SubtractionResult = SubtractionResult;
            this.SystemDateTime = SystemDateTime;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenewCertificate", WrapperNamespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationServiceTypes", IsWrapped=true)]
    public partial class RenewCertificateRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
        public Swissdec.SUA.OrganizationAuthenticationRenew.RequestContextType RequestContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateRequest-ID", Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
        public string CertificateRequestID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
        public Swissdec.SUA.OrganizationAuthenticationRenew.CertificateSignRequestBaseType CertificateSignRequest;
        
        public RenewCertificateRequest()
        {
        }
        
        public RenewCertificateRequest(Swissdec.SUA.OrganizationAuthenticationRenew.RequestContextType RequestContext, string CertificateRequestID, Swissdec.SUA.OrganizationAuthenticationRenew.CertificateSignRequestBaseType CertificateSignRequest)
        {
            this.RequestContext = RequestContext;
            this.CertificateRequestID = CertificateRequestID;
            this.CertificateSignRequest = CertificateSignRequest;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RenewCertificateResponse", WrapperNamespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationServiceTypes", IsWrapped=true)]
    public partial class RenewCertificateResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
        public Swissdec.SUA.OrganizationAuthenticationRenew.ResponseContextType ResponseContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("CertificateRequest-ID", Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
        public string CertificateRequestID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer", Order=2)]
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://www.swissdec.ch/schema/oa/20230301/OrganizationAuthenticationContainer")]
        public Swissdec.SUA.OrganizationAuthenticationRenew.CertificateSignResponseType Certificate;
        
        public RenewCertificateResponse()
        {
        }
        
        public RenewCertificateResponse(Swissdec.SUA.OrganizationAuthenticationRenew.ResponseContextType ResponseContext, string CertificateRequestID, Swissdec.SUA.OrganizationAuthenticationRenew.CertificateSignResponseType Certificate)
        {
            this.ResponseContext = ResponseContext;
            this.CertificateRequestID = CertificateRequestID;
            this.Certificate = Certificate;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public interface OrganizationAuthenticationRenewPortChannel : Swissdec.SUA.OrganizationAuthenticationRenew.OrganizationAuthenticationRenewPort, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.2.0-preview1.23462.5")]
    public partial class OrganizationAuthenticationRenewPortClient : System.ServiceModel.ClientBase<Swissdec.SUA.OrganizationAuthenticationRenew.OrganizationAuthenticationRenewPort>, Swissdec.SUA.OrganizationAuthenticationRenew.OrganizationAuthenticationRenewPort
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public OrganizationAuthenticationRenewPortClient() : 
                base(OrganizationAuthenticationRenewPortClient.GetDefaultBinding(), OrganizationAuthenticationRenewPortClient.GetDefaultEndpointAddress())
        {
            this.Endpoint.Name = EndpointConfiguration.OrganizationAuthenticationRenew.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganizationAuthenticationRenewPortClient(EndpointConfiguration endpointConfiguration) : 
                base(OrganizationAuthenticationRenewPortClient.GetBindingForEndpoint(endpointConfiguration), OrganizationAuthenticationRenewPortClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganizationAuthenticationRenewPortClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(OrganizationAuthenticationRenewPortClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganizationAuthenticationRenewPortClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(OrganizationAuthenticationRenewPortClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public OrganizationAuthenticationRenewPortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<Swissdec.SUA.OrganizationAuthenticationRenew.CheckInteroperabilityResponse> CheckInteroperabilityAsync(Swissdec.SUA.OrganizationAuthenticationRenew.CheckInteroperabilityRequest request)
        {
            return base.Channel.CheckInteroperabilityAsync(request);
        }
        
        public System.Threading.Tasks.Task<Swissdec.SUA.OrganizationAuthenticationRenew.RenewCertificateResponse> RenewCertificateAsync(Swissdec.SUA.OrganizationAuthenticationRenew.RenewCertificateRequest request)
        {
            return base.Channel.RenewCertificateAsync(request);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.OrganizationAuthenticationRenew))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.OrganizationAuthenticationRenew))
            {
                return new System.ServiceModel.EndpointAddress("http://tst.itserve.ch/services/OrganizationAuthentication");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding()
        {
            return OrganizationAuthenticationRenewPortClient.GetBindingForEndpoint(EndpointConfiguration.OrganizationAuthenticationRenew);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress()
        {
            return OrganizationAuthenticationRenewPortClient.GetEndpointAddress(EndpointConfiguration.OrganizationAuthenticationRenew);
        }
        
        public enum EndpointConfiguration
        {
            
            OrganizationAuthenticationRenew,
        }
    }
}
